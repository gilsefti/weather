{"ast":null,"code":"import _slicedToArray from \"C:\\\\dev\\\\react\\\\Players\\\\myclients\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\react\\\\Players\\\\myclients\\\\src\\\\Tiktak.js\";\nimport React, { useState } from 'react';\nimport './tiktak.css';\nimport { render } from '@testing-library/react';\n\nfunction handleClick(i) {}\n\nfunction Board() {\n  const _useState = useState(Array(9).fill(null)),\n        _useState2 = _slicedToArray(_useState, 2),\n        gameState = _useState2[0],\n        setGameState = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isXNext = _useState4[0],\n        setisXNext = _useState4[1];\n\n  const winner = calculateWinner(gameState);\n  let status;\n\n  if (winner) {\n    status = \"Winner \" + winner;\n  } else {\n    status = \"next player: \" + (isXNext ? \"X\" : \"O\");\n  }\n\n  function handleClick(i) {\n    const squares = gameState.slice();\n    squares[i] = isXNext ? 'X' : 'O';\n    setisXNext(!isXNext);\n    setGameState(squares);\n  }\n\n  const renderSquare = i => {\n    return React.createElement(Square, {\n      val: gameState[i],\n      click: () => handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, status), React.createElement(\"div\", {\n    class: \"board-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), React.createElement(\"div\", {\n    class: \"board-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), React.createElement(\"div\", {\n    class: \"board-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, renderSquare(6), renderSquare(7), renderSquare(8)));\n}\n\nfunction Square(props) {\n  // const [displayed, setDisplyed] = useState(\"\");\n  return React.createElement(\"button\", {\n    class: \"square\",\n    onClick: props.click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.val);\n}\n\nfunction Tiktak() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Tiktak\"), React.createElement(\"div\", {\n    class: \"game-board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Board, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"game-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Tiktak;","map":{"version":3,"sources":["C:/dev/react/Players/myclients/src/Tiktak.js"],"names":["React","useState","render","handleClick","i","Board","Array","fill","gameState","setGameState","isXNext","setisXNext","winner","calculateWinner","status","squares","slice","renderSquare","Square","props","click","val","Tiktak","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './tiktak.css';\r\nimport { render } from '@testing-library/react';\r\n\r\nfunction handleClick(i) {\r\n\r\n}\r\nfunction Board() {\r\n\r\n  const [gameState, setGameState] = useState(Array(9).fill(null));\r\n  const [isXNext, setisXNext] = useState(true);\r\n  const winner = calculateWinner(gameState);\r\n  let status;\r\n  if (winner) {\r\n    status = \"Winner \" + winner;\r\n  }\r\n  else {\r\n    status = \"next player: \" + (isXNext ? \"X\" : \"O\");\r\n  }\r\n\r\n  function handleClick(i) {\r\n    const squares = gameState.slice();\r\n    squares[i] = isXNext ? 'X' : 'O';\r\n    setisXNext(!isXNext);\r\n    setGameState(squares);\r\n  }\r\n  const renderSquare = (i) => {\r\n    return <Square val={gameState[i]} click={() => handleClick(i)} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"status\">{status}</div>\r\n      <div class=\"board-row\">\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </div>\r\n      <div class=\"board-row\">\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </div>\r\n      <div class=\"board-row\">\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\nfunction Square(props) {\r\n  // const [displayed, setDisplyed] = useState(\"\");\r\n  return (\r\n    <button class=\"square\" onClick={props.click}>{props.val}</ button>\r\n  );\r\n\r\n}\r\nfunction Tiktak() {\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tiktak</h2>\r\n      <div class=\"game-board\">\r\n        <Board />\r\n      </div>\r\n      <div class=\"game-info\">\r\n        <div>{}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\nexport default Tiktak;"]},"metadata":{},"sourceType":"module"}