{"ast":null,"code":"import _objectSpread from \"C:\\\\dev\\\\react\\\\myclients\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\dev\\\\react\\\\myclients\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\react\\\\myclients\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport './App.css';\nvar test = 0;\nconst testData = [{\n  ID: 1,\n  IDC: \"324\",\n  Name: \"gilad\"\n}, {\n  ID: 2,\n  IDC: \"323444\",\n  Name: \"or\"\n}];\n\nconst TableHeader = () => {\n  return React.createElement(\"div\", {\n    class: \"tr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"span\", {\n    class: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"span\", {\n    class: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nconst OneCient = props => {\n  const _useState = useState(props.Client),\n        _useState2 = _slicedToArray(_useState, 2),\n        client = _useState2[0],\n        setClient = _useState2[1];\n\n  const OnSave = async event => {\n    event.preventDefault();\n\n    if (test == 0) {\n      const resp = axios.post('http://localhost:58546/api/clients', {\n        client\n      });\n    }\n\n    console.log(client);\n  };\n\n  function handleChange(evt) {\n    const value = evt.target.value;\n    setClient(_objectSpread({}, client, {\n      [evt.target.name]: value\n    }));\n  }\n\n  return React.createElement(\"form\", {\n    class: \"tr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"hidden\",\n    id: \"id\",\n    name: \"id\",\n    value: client.ID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    value: client.IDC,\n    name: \"IDC\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    class: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: client.Name,\n    onChange: handleChange,\n    name: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    class: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: OnSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nconst TableValues = props => {\n  return props.clients.map(client => React.createElement(OneCient, {\n    Client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nconst AddClient = props => {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => props.addClient(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Add\"));\n};\n\nconst getData = async myGetData => {\n  var data;\n  if (test == 1) data = testData;else {\n    const resp = await axios.get(`http://localhost:58546/api/clients`);\n    data = resp.data;\n  }\n  myGetData(data);\n};\n\nconst GetClients = props => {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => getData(props.onClickClients),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Get Clients\"));\n};\n\nfunction App() {\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        readClients = _useState4[0],\n        setReadClients = _useState4[1];\n\n  const onAddClient = () => {\n    setReadClients(readClients.concat({}));\n  };\n\n  const onGetData = clientsArray => {\n    console.log(clientsArray);\n    setReadClients(clientsArray);\n  }; //getData(onGetData);\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(GetClients, {\n    onClickClients: onGetData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(AddClient, {\n    addClient: onAddClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TableHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(TableValues, {\n    clients: readClients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/dev/react/myclients/src/App.js"],"names":["React","useState","axios","test","testData","ID","IDC","Name","TableHeader","OneCient","props","Client","client","setClient","OnSave","event","preventDefault","resp","post","console","log","handleChange","evt","value","target","name","TableValues","clients","map","AddClient","addClient","getData","myGetData","data","get","GetClients","onClickClients","App","readClients","setReadClients","onAddClient","concat","onGetData","clientsArray"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\n\nvar test = 0;\nconst testData = [{\n  ID: 1,\n  IDC: \"324\",\n  Name: \"gilad\",\n},\n{\n  ID: 2,\n  IDC: \"323444\",\n  Name: \"or\",\n}]\nconst TableHeader = () => {\n  return (\n\n    <div class=\"tr\">\n      <span class=\"td\">ID</span>\n      <span class=\"td\">Name</span>\n      <span class=\"td\">Save</span>\n    </div>\n  )\n}\nconst OneCient = (props) => {\n  const [client, setClient] = useState(props.Client);\n  const OnSave = async (event) => {\n    event.preventDefault();\n    if (test == 0) {\n      const resp = axios.post('http://localhost:58546/api/clients', { client });\n    }\n    console.log(client);\n  }\n  function handleChange(evt) {\n    const value = evt.target.value;\n    setClient({\n      ...client,\n      [evt.target.name]: value\n    });\n  }\n  return (\n    <form class=\"tr\">\n      <span class=\"td\">\n        <input type=\"hidden\" id=\"id\" name=\"id\" value={client.ID} />\n        <input type=\"text\" value={client.IDC}\n          name=\"IDC\"\n          onChange={handleChange}\n        /></span>\n      <span class=\"td\"><input type=\"text\" value={client.Name}\n        onChange={handleChange}\n        name=\"Name\"\n      /></span>\n      <span class=\"td\"><button onClick={OnSave}>Save</button></span>\n    </form>\n  )\n}\n\nconst TableValues = (props) => {\n  return (props.clients.map(client => <OneCient Client={client} />));\n}\nconst AddClient = (props) => {\n  return (\n     <span>\n      <button\n    onClick={() => props.addClient()}\n  >Add</button>\n       </span>)\n\n}\nconst getData = async (myGetData) => {\n  var data;\n  if (test == 1)\n    data = testData;\n  else {\n    const resp = await axios.get(`http://localhost:58546/api/clients`);\n    data = resp.data;\n  }\n  myGetData(data);\n}\nconst GetClients = (props) => {\n  return (\n    <span>\n      <button\n    onClick={() => getData(props.onClickClients)}\n  >Get Clients</button>\n      </span>)\n\n}\n\n\n\nfunction App() {\n  const [readClients, setReadClients] = useState([]);\n  const onAddClient = () => { setReadClients(readClients.concat({})) }\n  const onGetData = (clientsArray) => {\n    console.log(clientsArray);\n    setReadClients(clientsArray);\n  }\n  //getData(onGetData);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <GetClients onClickClients={onGetData} />\n        <AddClient addClient={onAddClient} />\n        <div class=\"table\">\n          <TableHeader />\n          <TableValues clients={readClients} />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}